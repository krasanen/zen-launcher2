buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:2.0.2"
    }
}

plugins {
    id 'com.android.application'
    id 'net.ltgt.errorprone' version '2.0.2'
}

android {
    lintOptions {
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileSdkVersion 34
    defaultConfig {
        applicationId 'com.zmengames.zenlauncher'
        minSdkVersion 19
        targetSdkVersion 34
        versionName = buildTimeStamp() + "@" + gitLastCommit()
        versionCode = gitVersion()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfigs {
            debug {
                signingConfig signingConfigs.debug
            }
            release {
                signingConfig signingConfigs.release
            }
        }
        Properties props = new Properties()
        def propFile = file('../signing.properties')
        if (propFile.canRead()){
            props.load(new FileInputStream(propFile))

            if (props!=null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                    props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {

                android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
                android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
                android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
                android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
                android.signingConfigs.debug.storeFile = file(props['STORE_FILE'])
                android.signingConfigs.debug.storePassword = props['STORE_PASSWORD']
                android.signingConfigs.debug.keyAlias = props['KEY_ALIAS']
                android.signingConfigs.debug.keyPassword = props['KEY_PASSWORD']
            } else {
                android.buildTypes.release.signingConfig = null
            }
        }else {
            android.buildTypes.release.signingConfig = null
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            signingConfig signingConfigs.debug
            resValue "string", "app_version", "${defaultConfig.versionName}.${defaultConfig.versionCode}"
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix "-debug"
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            signingConfig signingConfigs.debug
            resValue "string", "app_version", "${defaultConfig.versionName}${versionNameSuffix}.${defaultConfig.versionCode}"

        }
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
            }
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'com.google.android.gms:play-services-auth:21.1.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev197-1.25.0'
    implementation 'com.google.http-client:google-http-client-gson:1.30.1'
    implementation('com.google.api-client:google-api-client-android:1.30.1') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation 'org.greenrobot:eventbus:3.3.1'
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"

    errorproneJavac("com.google.errorprone:javac:9+181-r4173-1")
    errorprone("com.google.errorprone:error_prone_core:2.3.3")
    implementation 'com.github.stefanhaustein.expressionparser:core:v1.0.0'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
}

tasks.withType(JavaCompile) {
    options.errorprone.enabled = false
    options.errorprone.disableWarningsInGeneratedCode = true

}

def gitVersion() {
    def process = "git rev-list HEAD --first-parent --count".execute()
    return process.text.toInteger() + 10
}

def gitLastCommit() {
    def process = "git rev-parse --short HEAD".execute()
    return process.text.trim()
}

def buildTimeStamp() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}

configurations {
    all {
        exclude module: 'httpclient'
    }
}
